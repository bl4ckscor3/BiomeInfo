buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'

version = 'v1.4'
group = 'bl4ckscor3.mod.biomeinfo'
archivesBaseName = 'biomeinfo-1.16.5'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'parchment', version: '2021.10.17-1.16.5'
	
    runs {
        client {
		    workingDirectory project.file('run/client')
            property 'forge.logging.console.level', 'debug'

            mods {
                biomeinfo {
                    source sourceSets.main
                }
            }
        }

        server {
		    workingDirectory project.file('run/server')
            property 'forge.logging.console.level', 'debug'

            mods {
                biomeinfo {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.28'
}

jar {
    manifest {
        attributes(["Specification-Title": "BiomeInfo",
                    "Specification-Vendor": "bl4ckscor3",
                    "Specification-Version": "${version}",
                    "Implementation-Title": "BiomeInfo",
                    "Implementation-Version": "${version}",
                    "Implementation-Vendor" :"bl4ckscor3",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}

processResources {
	duplicatesStrategy = 'include'
	//replace ${version} in mods.toml
	inputs.property 'version', project.version

	from(sourceSets.main.resources.srcDirs) {
		include 'META-INF/mods.toml'

		expand 'version': project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude 'META-INF/mods.toml'
	}
}